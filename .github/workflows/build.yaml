name: Build FastDDS Python

on:
  workflow_dispatch:

jobs:
  fastdds_python:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        platform: [ubuntu-24.04, ubuntu-22.04-arm] #, ubuntu-24.04-arm]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set-up dependancies
      run: |
        codename=$(lsb_release -c -s)
        echo "deb [trusted=yes] https://alest-software.github.io/ubuntu ${codename} main" | sudo tee /etc/apt/sources.list.d/alest-software.list
        sudo apt update
        if [ "${codename}" = "noble" ]; then
          sudo apt remove -y swig
          sudo apt install -y swig4.1
        fi
        sudo apt install -y libasio-dev libtinyxml2-dev
        sudo apt install -y libssl-dev
        sudo apt install -y libp11-dev
        sudo apt install -y softhsm2
        sudo apt install -y libengine-pkcs11-openssl
        sudo apt install -y libfoonathan-memory-dev
        sudo apt install -y libpython3-dev
        sudo apt install -y libfastcdr libfastdds

    - name: Build
      run: |
        mkdir build
        cd build
        ARCH=$(dpkg --print-architecture)
        cmake -DCPACK_DEBIAN_PACKAGE_ARCHITECTURE=${ARCH} -DCPACK_DEBIAN_PACKAGE_REVISION=${GITHUB_RUN_NUMBER} ..
        cmake --build .
        cpack
        
    - name: Deploy
      run: |
        codename=$(lsb_release -c -s)
        git clone --depth 1 https://x-access-token:${{ secrets.TOKEN }}@github.com/alest-software/ubuntu.git
        for fn in build/*.deb; do
          arch=$(dpkg --info ${fn} | awk '/Architecture:/ {print $2}')
          fname=$(basename ${fn})
          dest="dists/$codename/main/binary-$arch"
          mkdir -p "ubuntu/${dest}"
          cp "${fn}" "ubuntu/${dest}/${fname}"
          (cd ubuntu; git add "${dest}/${fname}")
        done
        cd ubuntu
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git commit -m 'Automatic deployment' || echo 'Nothing to commit'
        git push
        
